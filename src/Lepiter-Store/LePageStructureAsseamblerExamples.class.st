Class {
	#name : #LePageStructureAsseamblerExamples,
	#superclass : #Object,
	#category : #'Lepiter-Store-Examples'
}

{ #category : #assertions }
LePageStructureAsseamblerExamples >> assertStructure: structureDescription forContent: aLepiterContent [

	self assert: structureDescription size equals: aLepiterContent children size.
	structureDescription withIndexDo: [ :assoc :index |
		| currentSnippet textValue |
		currentSnippet := aLepiterContent children at: index.
		textValue := assoc value isAssociation 
			ifTrue: [ assoc value key ] 
			ifFalse: [ assoc value ].
		self assert: currentSnippet string equals: textValue.
		assoc value isAssociation ifTrue: [
			self 
				assertStructure: assoc value value
				forContent: currentSnippet  ] ] 
	

]

{ #category : #accessing }
LePageStructureAsseamblerExamples >> pageUid [
	^ LeUID new 
		uid: (UUID fromString: '7da384ea-e510-4913-9694-12fc22c1b8bd')
]

{ #category : #'examples - snippets' }
LePageStructureAsseamblerExamples >> snippetA [
	<gtExample>
	^ LeTextSnippet new
		string: 'A';
		uid: self snippetAUid
]

{ #category : #'accessing - uid' }
LePageStructureAsseamblerExamples >> snippetAUid [
	^ LeUID new 
		uid: (UUID fromString: '509980c4-c780-45e1-ab5f-9ae86cd2d1cf')
]

{ #category : #'examples - snippets' }
LePageStructureAsseamblerExamples >> snippetB [
	<gtExample>
	^ LeTextSnippet new
		string: 'B';
		uid: self snippetBUid
]

{ #category : #'accessing - uid' }
LePageStructureAsseamblerExamples >> snippetBUid [
	^ LeUID new 
		uid: (UUID fromString: '37185769-595b-4f66-8daf-65e25e38a981')
]

{ #category : #'examples - snippets' }
LePageStructureAsseamblerExamples >> snippetBUnknown [
	<gtExample>
	^ LeUnknownSnippet new
		jsonString: (STONJSON toString: {'B'});
		uid: self snippetBUid
]

{ #category : #'examples - snippets' }
LePageStructureAsseamblerExamples >> snippetC [
	<gtExample>
	^ LeTextSnippet new
		string: 'C';
		uid: self snippetCUid
]

{ #category : #'accessing - uid' }
LePageStructureAsseamblerExamples >> snippetCUid [
	^ LeUID new 
		uid: (UUID fromString: 'c475afc8-3b13-4e87-ac16-06056b32ab48')
]

{ #category : #'examples - snippets' }
LePageStructureAsseamblerExamples >> snippetD [
	<gtExample>
	^ LeTextSnippet new
		string: 'D';
		uid: self snippetDUid
]

{ #category : #'accessing - uid' }
LePageStructureAsseamblerExamples >> snippetDUid [
	^ LeUID new 
		uid: (UUID fromString: '358fe201-76c8-4046-8297-1dcc204fd4b0')
]

{ #category : #'examples - snippets' }
LePageStructureAsseamblerExamples >> snippetDUnknown [
	<gtExample>
	^ LeUnknownSnippet new
		jsonString: (STONJSON toString: {'D'});
		uid: self snippetDUid
]

{ #category : #'examples - snippets' }
LePageStructureAsseamblerExamples >> snippetE [
	<gtExample>
	^ LeTextSnippet new
		string: 'E';
		uid: self snippetEUid
]

{ #category : #'accessing - uid' }
LePageStructureAsseamblerExamples >> snippetEUid [
	^ LeUID new 
		uid: (UUID fromString: '71a301df-84d9-4635-b40d-342e58b6aa6d')
]

{ #category : #'examples - snippets' }
LePageStructureAsseamblerExamples >> snippetF [
	<gtExample>
	^ LeTextSnippet new
		string: 'F';
		uid: self snippetFUid
]

{ #category : #'accessing - uid' }
LePageStructureAsseamblerExamples >> snippetFUid [
	^ LeUID new 
		uid: (UUID fromString: 'eb8044a9-1293-4c29-907d-ae8c99b40508')
]

{ #category : #'examples - pages' }
LePageStructureAsseamblerExamples >> targetPageWithComplexStructureModified [
	<gtExample>
	| targetPage |
	targetPage := LePage named: 'Target Page'.
	targetPage basicUid: self pageUid.
	
	targetPage addSnippet: (self snippetA
		string: 'A-M';
		addSnippet: (self snippetC
			string: 'C-M');
		yourself).
	targetPage addSnippet: (self snippetB
		addSnippet: (self snippetE
			addSnippet: self snippetD;
			yourself);
		yourself).
	targetPage addSnippet: self snippetF.
	
	^ targetPage
]

{ #category : #'examples - pages' }
LePageStructureAsseamblerExamples >> targetPageWithComplexStructureOne [
	<gtExample>
	| targetPage |
	targetPage := LePage named: 'Target Page'.
	targetPage basicUid: self pageUid.
	
	targetPage addSnippet: (self snippetA
		addSnippet: self snippetDUnknown;
		yourself).
	targetPage addSnippet: (self snippetBUnknown
		addSnippet: self snippetC;
		addSnippet: self snippetF;
		yourself).
	
	^ targetPage
]

{ #category : #'examples - pages' }
LePageStructureAsseamblerExamples >> targetPageWithFiveSnippetsModifiedNestedStructure [
	<gtExample>
	| targetPage |
	targetPage := LePage named: 'Target Page'.
	targetPage basicUid: self pageUid.
	
	targetPage addSnippet: (self snippetA
		string: 'A-M';
		addSnippet: self snippetD;
		yourself).
	targetPage addSnippet: (self snippetB
		addSnippet: (self snippetC
			string: 'C-M');
		addSnippet: self snippetE;
		yourself).
	
	^ targetPage
]

{ #category : #'examples - pages' }
LePageStructureAsseamblerExamples >> targetPageWithFourFlatSnippetStructure [
	<gtExample>
	| targetPage |
	targetPage := LePage named: 'Target Page'.
	targetPage basicUid: self pageUid.
	
	targetPage addSnippet: self snippetA.
	targetPage addSnippet: self snippetB.
	targetPage addSnippet: self snippetC.
	targetPage addSnippet: self snippetD.
	
	^ targetPage
]

{ #category : #'examples - pages' }
LePageStructureAsseamblerExamples >> targetPageWithFourSnipetsOneNested [
	<gtExample>
	| targetPage |
	targetPage := LePage named: 'Target Page'.
	targetPage basicUid: self pageUid.
	
	targetPage addSnippet: self snippetA.
	targetPage addSnippet: (self snippetB
		addSnippet: self snippetC;
		yourself).
	targetPage addSnippet: self snippetD.
	
	^ targetPage
]

{ #category : #'examples - pages' }
LePageStructureAsseamblerExamples >> targetPageWithTwoSnippetsAAndB [
	<gtExample>
	| targetPage |
	targetPage := LePage named: 'Target Page'.
	targetPage basicUid: self pageUid.
	
	targetPage addSnippet: self snippetA.
	targetPage addSnippet: self snippetB.
	
	^ targetPage
]

{ #category : #'examples - pages' }
LePageStructureAsseamblerExamples >> targetPageWithTwoSnippetsAKnownAndBUnknown [
	<gtExample>
	| targetPage |
	targetPage := LePage named: 'Target Page'.
	targetPage basicUid: self pageUid.
	
	targetPage addSnippet: self snippetA.
	targetPage addSnippet: self snippetBUnknown.
	
	^ targetPage
]

{ #category : #'examples - pages' }
LePageStructureAsseamblerExamples >> targetPageWithTwoSnippetsAKnownAndBUnknownModified [
	<gtExample>
	| targetPage |
	targetPage := LePage named: 'Target Page'.
	targetPage basicUid: self pageUid.
	
	targetPage addSnippet: self snippetA.
	targetPage addSnippet: (self snippetBUnknown
		jsonString: (STONJSON toString: { 'a' -> 1} asDictionary )).
	
	^ targetPage
]

{ #category : #'examples - pages' }
LePageStructureAsseamblerExamples >> targetPageWithTwoSnippetsAParentAndBChild [
	<gtExample>
	| targetPage |
	targetPage := LePage named: 'Target Page'.
	targetPage basicUid: self pageUid.
	
	targetPage addSnippet: (self snippetA
		addSnippet: self snippetB;
		yourself).
	
	^ targetPage
]

{ #category : #examples }
LePageStructureAsseamblerExamples >> updateStructureForComplexStructureModification [
	<gtExample>
	| targetPage modifiedPage asseambler |
	
	targetPage := self targetPageWithComplexStructureOne.
	modifiedPage := self targetPageWithComplexStructureModified.
	
	asseambler := targetPage rebuildFromContent: modifiedPage. 
	
	self assert: asseambler modifiedBlocksCount equals: 2.
	self assert: asseambler movedBlocksCount equals: 3.
	self assert: asseambler addedBlocksCount equals: 1.
	self assert: asseambler resolvedBlocksCount equals: 2.
	
	^ asseambler
]

{ #category : #examples }
LePageStructureAsseamblerExamples >> updateStructureForOneChangedUnknownSnippet [
	<gtExample>
	| targetPage modifiedPage asseambler |
	
	targetPage := self targetPageWithTwoSnippetsAKnownAndBUnknown.
	modifiedPage := self targetPageWithTwoSnippetsAKnownAndBUnknownModified.
	
	asseambler := targetPage rebuildFromContent: modifiedPage. 
	
	self assert: targetPage children first isTextSnippet.
	self assert: targetPage children second isUnknownSnippet.
	self 
		assert: targetPage children second jsonString 
		equals: (STONJSON toString: { 'a' -> 1 } asDictionary ).
	
	self assert: asseambler modifiedBlocksCount equals: 1.
	self assert: asseambler movedBlocksCount equals: 0.
	self assert: asseambler addedBlocksCount equals: 0.
	self assert: asseambler resolvedBlocksCount equals: 0.
	
	^ asseambler
]

{ #category : #examples }
LePageStructureAsseamblerExamples >> updateStructureForOneResolvedAndMovedUnknownSnippet [
	<gtExample>
	| targetPage modifiedPage asseambler |
	
	targetPage := self targetPageWithTwoSnippetsAKnownAndBUnknown.
	modifiedPage := self targetPageWithTwoSnippetsAParentAndBChild.
	
	asseambler := targetPage rebuildFromContent: modifiedPage. 
	
	self assert: targetPage children first isTextSnippet.
	self assert: targetPage children first children first isTextSnippet.
	
	self assert: asseambler modifiedBlocksCount equals: 0.
	self assert: asseambler movedBlocksCount equals: 1.
	self assert: asseambler addedBlocksCount equals: 0.
	self assert: asseambler resolvedBlocksCount equals: 1.
	
	^ asseambler
]

{ #category : #examples }
LePageStructureAsseamblerExamples >> updateStructureForOneResolvedUnknownSnippet [
	<gtExample>
	| targetPage modifiedPage asseambler |
	
	targetPage := self targetPageWithTwoSnippetsAKnownAndBUnknown.
	modifiedPage := self targetPageWithTwoSnippetsAAndB.
	
	asseambler := targetPage rebuildFromContent: modifiedPage. 
	
	self assert: targetPage children first isTextSnippet.
	self assert: targetPage children second isTextSnippet.
	self assert: targetPage children second string equals: 'B'.
	
	self assert: asseambler modifiedBlocksCount equals: 0.
	self assert: asseambler movedBlocksCount equals: 0.
	self assert: asseambler addedBlocksCount equals: 0.
	self assert: asseambler resolvedBlocksCount equals: 1.
	
	^ asseambler
]

{ #category : #examples }
LePageStructureAsseamblerExamples >> updateStructureForOneSnippetNesting [
	<gtExample>
	| targetPage modifiedPage asseambler |
	
	targetPage := self targetPageWithFourFlatSnippetStructure.
	modifiedPage := self targetPageWithFourSnipetsOneNested.
	
	asseambler := targetPage rebuildFromContent: modifiedPage. 
	
	self 
		assertStructure: { 
			#snippetA -> 'A'.
			#snippetB -> ('B' -> {
				#snippetC -> 'C'. 
				}).
			#snippetD -> 'D' } 
		forContent: targetPage.
	
	self assert: asseambler modifiedBlocksCount equals: 0.
	self assert: asseambler movedBlocksCount equals: 1.
	self assert: asseambler addedBlocksCount equals: 0.
	self assert: asseambler resolvedBlocksCount equals: 0.
	
	^ asseambler
]

{ #category : #examples }
LePageStructureAsseamblerExamples >> updateStructureForTwoSnippetNestingAndChanges [
	<gtExample>
	| targetPage modifiedPage asseambler |
	
	targetPage := self targetPageWithFourFlatSnippetStructure.
	modifiedPage := self targetPageWithFiveSnippetsModifiedNestedStructure .
	
	asseambler := targetPage rebuildFromContent: modifiedPage. 
	
	self 
		assertStructure: { 
			#snippetA -> ('A-M' -> {
				#snippetD -> 'D'. 
				}).
			#snippetB -> ('B' -> {
				#snippetC -> 'C-M'. 
				#snippetE -> 'E'.
				}) } 
		forContent: targetPage.
	
	self assert: asseambler modifiedBlocksCount equals: 2.
	self assert: asseambler movedBlocksCount equals: 2.
	self assert: asseambler addedBlocksCount equals: 1.
	self assert: asseambler resolvedBlocksCount equals: 0.
	
	^ asseambler
]
